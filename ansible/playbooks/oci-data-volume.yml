---
# This playbook mount the OCI Block Volume to /data
- hosts: server
  become: true
  gather_facts: false

  tasks:
    - name: Create /data folder
      file:
        path: /data
        state: directory
        mode: 0755
        group: "{{user}}"
        owner: "{{user}}"

    - name: Create OCI iSCSI Node
      shell: "iscsiadm -m node -o new -T {{volume_iqn}} -p {{volume_ipv4}}:{{volume_port}}"

    - name: Start OCI iSCSI Node at boot
      shell: "iscsiadm -m node -o update -T {{volume_iqn}} -n node.startup -v automatic"

    - name: Set the auth for the OCI iSCSI Node
      shell: "iscsiadm -m node -T {{volume_iqn}} -p {{volume_ipv4}}:{{volume_port}} -o update -n node.session.auth.authmethod -v CHAP"

    - name: Set the username for the OCI iSCSI Node
      shell: "iscsiadm -m node -T {{volume_iqn}} -p {{volume_ipv4}}:{{volume_port}} -o update -n node.session.auth.username -v {{volume_chap_username}}"

    - name: Set the password for the OCI iSCSI Node
      shell: "iscsiadm -m node -T {{volume_iqn}} -p {{volume_ipv4}}:{{volume_port}} -o update -n node.session.auth.password -v {{volume_chap_password}}"

    - name: Attach the OCI iSCSI Node to the instance
      shell: "iscsiadm -m node -T {{volume_iqn}} -p {{volume_ipv4}}:{{volume_port}} -l"
      ignore_errors: true # ignore errors if the session already exists

    - name: Check if the volume is formated. if not it will be formated with ext4
      community.general.filesystem:
        fstype: ext4
        state: present
        dev: "{{volume_device_name}}"

    - name: Add the label "instance-data"
      shell: "e2label $(readlink -f {{volume_device_name}}) instance-data"

    - name: Remove previous ref. of the /data volume if exists on /etc/fstab
      shell: "sed  -i -e '/^[\\/][^ \t]*[ \t]*\\/data[ \t]/d' /etc/fstab"

    - name: Add the entry to /etc/fstab
      shell: "grep -q ^LABEL=instance-data /etc/fstab || echo 'LABEL=instance-data /data ext4 defaults' | tee -a /etc/fstab >/dev/null"

    - name: Mount the volume on /data
      shell: "grep -q \"^$(readlink -f {{volume_device_name}}) /data \" /proc/mounts || mount /data"
